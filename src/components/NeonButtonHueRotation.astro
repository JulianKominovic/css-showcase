---
import Description from "./Description.astro";
---

<style>
  .neon {
    --distance: 2px;
    --amplitude: 30px;
    position: relative;
    z-index: 1;
  }

  .neon::before {
    position: absolute;
    content: "";
    width: 0%;
    height: 0%;
    inset: 50% 50%;
    background: #31e1f7;
    color: #31e1f7;
    z-index: 0;
    filter: blur(0px);

    transition-property: filter width height background;
    transition-duration: 0.2s;
  }
  .neon:hover::before {
    filter: blur(var(--amplitude));
    width: calc(100% + var(--distance));
    height: calc(100% + var(--distance));
    top: calc((var(--distance) * -1) / 2);
    left: calc((var(--distance) * -1) / 2);

    transition-property: filter width height;
    transition-duration: 0.2s;
  }

  .neon::after {
    content: "Neon";
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 100% 0;
    display: flex;
    justify-content: center;
    align-items: center;
    rotate: 180deg;
    color: #31e1f7;

    opacity: 0.4;
    background-image: linear-gradient(
      to top,
      rgba(49, 225, 247),
      rgba(24, 24, 27)
    );
    transition-property: opacity background-image;
    transition-duration: 0.2s;
  }
  .neon::after {
    content: "Neon";
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 100% 0;
    display: flex;
    justify-content: center;
    align-items: center;
    rotate: 180deg;
    opacity: 0;
    background-image: linear-gradient(
      to top,

      rgb(24, 24, 27)
    );

    transition-property: opacity background-image;
    transition-duration: 0.2s;
  }
  .neon:hover::after {
    opacity: 0.2;
    background-image: linear-gradient(
      to top,
      rgb(49, 225, 247),
      rgba(24, 24, 27, 0.2)
    );
    transition-property: opacity background-image;
    transition-duration: 0.2s;
  }
  .inner-box {
    color: #31e1f7;
    background-color: black;
    transition-property: color background-color;
    transition-duration: 0.2s;
  }
  .neon:hover > .inner-box {
    color: black;
    background-color: #31e1f7;
    transition-property: color background-color;
    transition-duration: 0.2s;
  }
  .neon {
    filter: hue-rotate(90deg);
  }
  .neon.over-saturate {
    filter: hue-rotate(90deg) saturate(4);
  }
  .neon.over-saturate-240deg {
    filter: hue-rotate(240deg) saturate(4);
  }
  .neon.over-saturate-270deg {
    filter: hue-rotate(270deg) saturate(4);
  }
</style>

<Description
  title={"Hue-rotation"}
  description="Using hue-rotation we can easily change the color of the 'Neon button' component"
/>
<drop-shadow-button class="block w-full h-20 rounded-md my-8 text-xl neon">
  <div
    class="bg-zinc-900 z-10 relative w-full h-full rounded-md flex justify-center items-center inner-box"
  >
    Neon
  </div>
</drop-shadow-button>

<Description
  title={"Saturation"}
  description="As we could see in the last example colors where under-saturated. To fix this, we can use 'saturate' filter"
/>

<drop-shadow-button
  class="block w-full h-20 rounded-md my-8 text-xl neon over-saturate"
>
  <div
    class="bg-zinc-900 z-10 relative w-full h-full rounded-md flex justify-center items-center inner-box"
  >
    Neon
  </div>
</drop-shadow-button>
<br />
<Description
  description="This is performance killer, specially when your set saturate values too high, so I wouldn't recommend it for real world scenarios."
/>
<div class="sm:flex sm:gap-8">
  <drop-shadow-button
    class="block w-full h-20 rounded-md my-8 text-xl neon over-saturate-240deg"
  >
    <div
      class="bg-zinc-900 z-10 relative w-full h-full rounded-md flex justify-center items-center inner-box"
    >
      Neon
    </div>
  </drop-shadow-button>
  <drop-shadow-button
    class="block w-full h-20 rounded-md my-8 text-xl neon over-saturate-270deg"
  >
    <div
      class="bg-zinc-900 z-10 relative w-full h-full rounded-md flex justify-center items-center inner-box"
    >
      Neon
    </div>
  </drop-shadow-button>
</div>
